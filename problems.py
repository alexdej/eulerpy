from util import *

def problem1(m):
  return sum(n for n in xrange(1, m) if not n % 5 or not n % 3)
print 'problem 1: %s' % problem1(1000)

def problem2(m):
  return sum(n for n in itertools.takewhile(lambda x: x < m, fibonacci()) if not n % 2)
print 'problem 2: %s' % problem2(4e6)

def problem3(n):
  return max(factors(n))
print 'problem 3: %s' % problem3(600851475143)
  
def problem4(m):
  return max(n for n in (a * b for a in xrange(m, -1, -1) for b in xrange(m, -1, -1)) if is_palindrome(str(n)))
print 'problem 4: %s' % problem4(999)
  
def problem6(n):
  return sum(i for i in xrange(1, n+1))**2 - sum(i**2 for i in xrange(1, n+1))
print 'problem 6: %s' % problem6(100)

def problem7(n):
  return nth(n, erat2())
print 'problem 7: %s' % problem7(1e4)

def problem8(data,digits=5):
  return max(product(map(int, data[i:i+digits])) for i in xrange(0, len(data) - digits))

def problem9(n):
  return product(nth(1, ((a,b,c) for a in xrange(1, n) for b in xrange(1, n) for c in xrange(1, n) if a+b+c == n and a**2 + b**2 == c**2)))
print 'problem 9: %s' % problem9(1000)
  
def test():
  assert problem1(10) == 23
  assert problem1(1000) == 233168
  assert problem2(4e6) == 4613732
  assert problem3(13195) == 29
  assert problem3(600851475143) == 6857
  assert problem4(99) == 9009
  assert problem4(999) == 906609
  assert problem6(10) == 2640
  assert problem6(100) == 25164150
  assert problem7(1e4) == 104743
  assert problem9(1000) == 31875000
  assert 40824 == problem8('7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450')
  print 'all tests passed.'
  
if __name__=="__main__":
  test()
